name: Publish

on:
  push:
    branches: [ main ]
    paths-ignore: [ '**/*.md' ]
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Read version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
      
      - uses: docker/setup-buildx-action@v3
      
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Validate VERSION
      - name: Validate VERSION
        run: |
          set -euo pipefail
          [[ -s VERSION ]] || (echo "VERSION empty" && exit 1)
          grep -Eq '^[0-9]+(\.[0-9]+){1,2}$' VERSION || (echo "Bad VERSION format" && exit 1)
          echo "✅ VERSION validation passed: $VERSION"

      # build/push base layer (SHA only)
      - id: base
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.base
          build-args: VERSION=${{ env.VERSION }}
          push: true
          tags: ghcr.io/git-steb/haskell-tex-dev:base-${{ github.sha }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      # build/push haskell layer (SHA only)
      - id: haskell
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.haskell
          build-args: |
            BASE_IMAGE=ghcr.io/git-steb/haskell-tex-dev:base-${{ github.sha }}
            VERSION=${{ env.VERSION }}
          push: true
          tags: ghcr.io/git-steb/haskell-tex-dev:haskell-${{ github.sha }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      # build/push tex layer (SHA only)
      - id: tex
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.tex
          build-args: |
            BASE_IMAGE=ghcr.io/git-steb/haskell-tex-dev:haskell-${{ github.sha }}
            VERSION=${{ env.VERSION }}
          push: true
          tags: ghcr.io/git-steb/haskell-tex-dev:tex-${{ github.sha }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      # Atomic tagging - create latest and version tags pointing to the same digests
      - name: Tag version and latest atomically
        run: |
          set -euo pipefail
          IMAGE="ghcr.io/git-steb/haskell-tex-dev"
          
          echo "Creating atomic tags for version $VERSION..."
          
          # Tag base layer
          docker buildx imagetools create \
            -t "$IMAGE:base-latest" \
            "$IMAGE:base-${{ github.sha }}"
          
          # Tag haskell layer
          docker buildx imagetools create \
            -t "$IMAGE:haskell-latest" \
            "$IMAGE:haskell-${{ github.sha }}"
          
          # Tag tex layer (full image) with all tags
          docker buildx imagetools create \
            -t "$IMAGE:tex-latest" \
            -t "$IMAGE:latest" \
            -t "$IMAGE:v$VERSION" \
            "$IMAGE:tex-${{ github.sha }}"
          
          echo "✅ Atomic tagging completed"

      - name: Verify all tags
        run: |
          echo "Verifying all container tags..."
          echo "=== Latest (should be full image with Haskell + TeX) ==="
          docker buildx imagetools inspect ghcr.io/git-steb/haskell-tex-dev:latest
          echo "=== v$VERSION (should be full image with Haskell + TeX) ==="
          docker buildx imagetools inspect ghcr.io/git-steb/haskell-tex-dev:v$VERSION
          echo "=== Tex layer ==="
          docker buildx imagetools inspect ghcr.io/git-steb/haskell-tex-dev:tex-latest
          echo "=== Haskell layer ==="
          docker buildx imagetools inspect ghcr.io/git-steb/haskell-tex-dev:haskell-latest
          echo "=== Base layer ==="
          docker buildx imagetools inspect ghcr.io/git-steb/haskell-tex-dev:base-latest
