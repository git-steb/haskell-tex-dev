name: Release image on tag
on:
  push:
    tags: ['v*']   # runs for v1.1.0 etc.
permissions:
  contents: write
  packages: write
  # needed only if you turn on provenance below:
  # id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build Haskell layer first (base for TeX layer)
      - name: Build Haskell layer
        id: haskell
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.haskell
          push: true
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/git-steb/haskell-tex-dev:haskell-${{ github.ref_name }}
            ghcr.io/git-steb/haskell-tex-dev:haskell-${{ github.sha }}
            ghcr.io/git-steb/haskell-tex-dev:haskell-latest
          # flip these on if you want attestations:
          # provenance: true
          # sbom: true

      # Build & push the complete Haskell + TeX image (from digest)
      - name: Build complete Haskell + TeX image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.tex
          build-args: |
            BASE_IMAGE=ghcr.io/git-steb/haskell-tex-dev@${{ steps.haskell.outputs.digest }}
          push: true
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/git-steb/haskell-tex-dev:${{ github.ref_name }}
            ghcr.io/git-steb/haskell-tex-dev:full-${{ github.sha }}
          # provenance: true
          # sbom: true

      # Promote latest to the exact digest (no rebuild)
      - name: Alias latest to tag digest
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/git-steb/haskell-tex-dev:latest \
            ghcr.io/git-steb/haskell-tex-dev@${{ steps.build.outputs.digest }}

      # Verify alias points to the right digest (fast sanity check)
      - name: Verify latest alias
        run: |
          WANT=${{ steps.build.outputs.digest }}
          GOT=$(docker buildx imagetools inspect ghcr.io/git-steb/haskell-tex-dev:latest | awk '/Digest:/ {print $2; exit}')
          [ "$WANT" = "$GOT" ] || { echo "latest mismatch $WANT != $GOT"; exit 1; }

      # Ensure package is public for downstream consumption
      - name: Make package public
        run: |
          echo "Making haskell-tex-dev package public..."
          gh api --method POST /user/packages/container/haskell-tex-dev/visibility \
            -f visibility=public || echo "Package visibility update failed (may already be public)"

      # Human-friendly summary + outputs for downstream jobs
      - name: Outputs & summary
        id: out
        run: |
          {
            echo "### Images"
            echo "- Haskell: \`ghcr.io/git-steb/haskell-tex-dev@${{ steps.haskell.outputs.digest }}\`"
            echo "- Full:    \`ghcr.io/git-steb/haskell-tex-dev@${{ steps.build.outputs.digest }}\`"
            echo
            echo "### Tags"
            echo "- \`haskell-${{ github.ref_name }}\`, \`haskell-${{ github.sha }}\`, \`haskell-latest\`"
            echo "- \`${{ github.ref_name }}\`, \`full-${{ github.sha }}\`, \`latest\`"
            echo
            echo "### Access"
            echo "- **Public package**: âœ… Available for all projects"
            echo "- **Pull command**: \`docker pull ghcr.io/git-steb/haskell-tex-dev:${{ github.ref_name }}\`"
          } >> "$GITHUB_STEP_SUMMARY"
          {
            echo "haskell_digest=${{ steps.haskell.outputs.digest }}"
            echo "full_digest=${{ steps.build.outputs.digest }}"
            echo "tag=${{ github.ref_name }}"
            echo "sha=${{ github.sha }}"
          } >> "$GITHUB_OUTPUT"
