name: Release image on tag
on:
  push:
    tags: ['v*']   # runs for v1.1.0 etc.
permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build Haskell layer first (needed for TeX layer)
      - name: Build Haskell layer
        id: haskell
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.haskell
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/git-steb/haskell-tex-dev:haskell-${{ github.ref_name }}
            ghcr.io/git-steb/haskell-tex-dev:haskell-latest

      # Build & push the complete Haskell + TeX image
      - name: Build complete Haskell + TeX image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.tex
          build-args: |
            BASE_IMAGE=ghcr.io/git-steb/haskell-tex-dev:haskell-${{ github.ref_name }}
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/git-steb/haskell-tex-dev:${{ github.ref_name }}
            ghcr.io/git-steb/haskell-tex-dev:latest
            ghcr.io/git-steb/haskell-tex-dev:full-${{ github.sha }}

      # Output digest for downstream consumption
      - name: Output digest for downstream consumption
        run: |
          echo "haskell_digest=${{ steps.haskell.outputs.digest }}" >> $GITHUB_OUTPUT
          echo "full_digest=${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT
          echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          echo "sha=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "âœ… Complete Haskell + TeX image built successfully!"
          echo "ðŸ“¦ Image: ghcr.io/git-steb/haskell-tex-dev:${{ github.ref_name }}"
          echo "ðŸ”— Digest: ${{ steps.build.outputs.digest }}"
          echo "ðŸŽ¯ This image includes both Haskell tools AND TeX tools!"
