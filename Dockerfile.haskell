# syntax=docker/dockerfile:1.7
# Haskell Layer: GHC 9.12.2 with native WASM support
# This layer is parallel to the TeX layer, both built on Ubuntu base
# Can be combined with TeX layer when needed (e.g., for HASM applications)
ARG BASE_IMAGE=ghcr.io/git-steb/haskell-tex-dev:base-latest
FROM ${BASE_IMAGE}

# Build arguments for flexible toolchain versions
ARG GHC_VERSION=9.12.2
ARG CABAL_VERSION=3.16.0.0
ARG STACK_VERSION=3.7.1

# Root for system dependencies
USER root
USER root
RUN apt-get update && apt-get install -y --no-install-recommends \
build-essential \
libffi-dev \
libffi8 \
libgmp-dev \
libgmp10 \
libncurses-dev \
pkg-config \
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/*
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-venv \
    nodejs \
    npm \
    && apt-get clean \

# Add GHCup and Cabal bin to PATH

USER dev
# Install specific Haskell toolchain versions
USER dev
# Note: GHC 9.12.2 uses Ubuntu 22.04 packages (Ubuntu 24.04 packages not yet available)
RUN curl -fsSL https://get-ghcup.haskell.org | BOOTSTRAP_HASKELL_NONINTERACTIVE=1 BOOTSTRAP_HASKELL_MINIMAL=1 GHCUP_INSTALL_BASE_PREFIX=/home/dev sh
ENV PATH="/home/dev/.ghcup/bin:$PATH"
RUN ghcup install cabal ${CABAL_VERSION} && ghcup set cabal ${CABAL_VERSION}
RUN ghcup install stack ${STACK_VERSION} && ghcup set stack ${STACK_VERSION}
RUN ghcup install ghc ${GHC_VERSION} && ghcup set ghc ${GHC_VERSION}
RUN ghc --supported-targets | grep -i wasm || echo "WASM target not found"

ENV PATH="/home/dev/.cabal/bin:/home/dev/.ghcup/bin:/home/dev/.local/bin:$PATH"
# Install Ormolu (Haskell formatter) as binary
# Quick native and WASM smoke tests to catch regressions early
RUN ghc --version && cabal --version && ( [ "${WITH_HLS}" = "1" ] && hls --version || echo "HLS not installed" ) || true

# Set up Cabal configuration (using default configuration)
RUN mkdir -p ~/.cabal
# Update Cabal index with caching
RUN --mount=type=cache,target=/home/dev/.cabal/store \
    --mount=type=cache,target=/home/dev/.cache \
    cabal update

# Clean up cabal store and cache
RUN cabal store gc --prune=all || true && rm -rf /home/dev/.cache/*
# Create helpful documentation and scripts
RUN mkdir -p ~/.local/bin && \
echo 'ghc --version' >> ~/.local/bin/show-haskell-versions && \
echo 'cabal --version' >> ~/.local/bin/show-haskell-versions && \
echo 'stack --version' >> ~/.local/bin/show-haskell-versions && \
echo 'echo ""' >> ~/.local/bin/show-haskell-versions && \
echo 'echo "=== WASM Toolchain ==="' >> ~/.local/bin/show-haskell-versions && \
echo 'wasmtime --version' >> ~/.local/bin/show-haskell-versions && \
chmod +x ~/.local/bin/show-haskell-versions
# Create usage documentation
RUN echo "# Haskell Layer: GHC 9.12.2 with WASM Support" > ~/README-haskell.md && \
    echo "- GHC 9.12.2 with native WebAssembly support" >> ~/README-haskell.md && \
    echo "- Cabal 3.16.0.0 for package management" >> ~/README-haskell.md && \
    echo "- Stack 3.7.1 for project management" >> ~/README-haskell.md && \
    echo "- Stack 3.7.1 for project management" >> ~/README-haskell.md && \
    echo "- Ormolu for code formatting" >> ~/README-haskell.md && \
    echo "- Python 3 with virtual environment for CI tools" >> ~/README-haskell.md && \
    echo "- Node.js and npm for web development" >> ~/README-haskell.md && \
    echo "" >> ~/README-haskell.md && \
    echo "## Quick Start" >> ~/README-haskell.md && \
    echo "" >> ~/README-haskell.md && \
    echo "### Check Haskell versions:" >> ~/README-haskell.md && \
    echo "```bash" >> ~/README-haskell.md && \
    echo "show-haskell-versions" >> ~/README-haskell.md && \
    echo "```" >> ~/README-haskell.md && \
    echo "" >> ~/README-haskell.md && \
    echo "### Create new project:" >> ~/README-haskell.md && \
    echo "```bash" >> ~/README-haskell.md && \
    echo "cabal init my-project" >> ~/README-haskell.md && \
    echo "cd my-project" >> ~/README-haskell.md && \
    echo "cabal build" >> ~/README-haskell.md && \
    echo "cabal run" >> ~/README-haskell.md && \
    echo "```" >> ~/README-haskell.md && \
    echo "" >> ~/README-haskell.md && \
    echo "### WebAssembly compilation:" >> ~/README-haskell.md && \
    echo "```bash" >> ~/README-haskell.md && \
    echo "ghc -target wasm32-wasi -o app.wasm Main.hs" >> ~/README-haskell.md && \
    echo "```" >> ~/README-haskell.md && \
    echo "" >> ~/README-haskell.md && \
    echo "### Add TeX support (for HASM applications):" >> ~/README-haskell.md && \
    echo "```bash" >> ~/README-haskell.md && \
    echo "# Use combined image with TeX layer" >> ~/README-haskell.md && \
    echo "docker run -it --rm -v $(pwd):/workspace \" >> ~/README-haskell.md && \
    echo "  ghcr.io/git-steb/haskell-tex-dev:full" >> ~/README-haskell.md && \
    echo "```" >> ~/README-haskell.md

# ---- Ship-ready cleanup (safe to remove; keeps runtime intact) ----
USER dev

# 1) Trim ghcup caches and orphaned toolchains
RUN ghcup gc -f || true && rm -rf ~/.ghcup/cache/*

# 2) Optional: remove HLS to keep image lean when WITH_HLS=0
RUN if [ "${WITH_HLS}" != "1" ]; then \
      rm -f ~/.ghcup/bin/hls* 2>/dev/null || true; \
    fi

# 3) Purge cabal store and index caches (no globally installed libs)
RUN cabal store gc --prune=all || true && rm -rf ~/.cache/* ~/.cabal/packages || true

# 4) Remove build artifacts if any slipped in
RUN rm -rf ~/dist-newstyle ~/Main.hs ~/Main.o || true

# 5) Strip large binaries where possible
USER root
RUN set -eux; \
    find /home/dev/.ghcup/bin -maxdepth 1 -type f -exec strip --strip-unneeded {} \; 2>/dev/null || true; \
    strip --strip-unneeded /usr/local/bin/ormolu 2>/dev/null || true

# 6) System cruft (docs, manpages) â€“ keep minimal runtime libs
RUN rm -rf /usr/share/doc /usr/share/man /usr/share/info || true

# 7) Remove leftover package manager caches

# Labels for better image management
LABEL maintainer="git-steb"
LABEL org.opencontainers.image.source="https://github.com/git-steb/haskell-tex-dev"
LABEL org.opencontainers.image.description="Haskell layer with GHC 9.12.2 and WASM support"
LABEL org.opencontainers.image.title="Haskell TeX Dev - Haskell Layer"
LABEL layer="haskell"
LABEL features="haskell,ghc,wasm,cabal,stack"
LABEL usage="docker run -it --rm -v $(pwd):/workspace ghcr.io/git-steb/haskell-tex-dev:haskell"

# Switch to dev user for runtime
USER dev

# Set default command
CMD ["/bin/bash"]
# Trigger build
